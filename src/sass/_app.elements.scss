section {
  margin-bottom: 1.5em;
}

button {
  background: $tylr-primary-gradient;
  color: $tylr-light-color;

  max-width: none;

  &.secondary {
    background: $tylr-secondary-gradient;
  }

  &:hover{
    cursor: pointer;
  }
}

input {
  background-color: $tylr-light-color;
  color: $tylr-secondary-color;

  &.error {
    border-color: $tylr-success-color;
    border-style: solid;
    border-width: 1px;
  }

  &.success {
    border-color: $tylr-success-color;
  }
}

button, input {
  border-radius: rem-calc(5);
  border: 0;
  box-shadow: $tylr-shadow;

  width: 100%;
  //margin: 0.5em;
  margin-top: 0.5em;
  margin-bottom: 0.5em;
  padding: 0.5em;
  padding-top: 1.1em;
  padding-bottom: 1.1em;
}

.dots:after {
  content: '\2807';
  font-size: 2em;
  line-height: 1em;
  vertical-align: top;
}

.card {
  width: 100%;
  color: $tylr-secondary-color-light;
  border-color: $tylr-secondary-color-light;
  border-width: 1px;
  border-style: solid;
  background-color: $tylr-light-color;
  border-radius: rem-calc(5);
  padding: 1em;
  margin-top: 1.5em;
  margin-bottom: 1.5em;
  box-shadow: $tylr-shadow;
  transition: box-shadow 0.3s ease-in-out;

  &:hover {
    box-shadow: none;
    transition: box-shadow 0.3s ease-in-out;
  }

  &.add {
    padding: 0.5em;

    .symbol, .description {
      width: 100%;
      text-align: center;
    }

    .symbol {
      font-size: 4em;
      font-weight: bold;
      padding: 0.4em;
      padding-top: 0.3em;
      line-height: 0.4em;
    }
  }

  &.person {
    color: $tylr-secondary-color;

    &.negative {
      border-color: $tylr-error-color;
    }

    &.active {
      background: $tylr-primary-gradient;
      color: $tylr-light-color;
    }

    .name {
      font-size: 1.5em;
    }

    .currency {
      vertical-align: top;
    }

    .value {
      font-size: 4em;
      text-align: right;
      font-weight: bold;
    }
  }
}

// Mixin for keyframes
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} { @content; }
  @-moz-keyframes #{$name} { @content; }
  @-ms-keyframes #{$name} { @content; }
  @keyframes #{$name} { @content; }
}

// Mixin for animations
@mixin animation($prop) {
  -webkit-animation: $prop;
  -moz-animation: $prop;
  -o-animation: $prop;
  animation: $prop;
}

// Create animation called 'check'
@include keyframes(check) {
  0% { height: 0; width: 0; }
  25% { height: 0; width: 10px; }
  50% { height: 20px; width: 10px; }
}

.checkbox {
  // This label functions as actual clickable area, because the default checkbox is rubbish
  label {
    display: block;
    height: 50px;
    position: relative;
    width: 50px;

    // This is the pseudo-element for the check mark
    &:after {
      /*
      This element has a border on the right, and top. By rotating it looks like a check symbol, but the wrong way. That's why I'm flipping it with scaleX(-1)
      */
      transform: scaleX(-1) rotate(180deg + -45deg);

      /*
      I want to position the symbol using the left top, because when increasing the width and height of an object, it expands from the top left corner as well. That is what makes it looks like it's being drawn.
      */
      transform-origin: left top;

      // The borders
      border-right: 4px solid $tylr-secondary-color-light;
      border-top: 4px solid $tylr-secondary-color-light;

      // Positioning and stuff
      content: '';
      display: block;
      height: 20px;
      left: 14px;
      position: absolute;
      top: 26px;
      width: 10px;
    }

    // Change the colour when you hover
    &:hover:after { border-color: $tylr-secondary-color-light; }
  }

  input { display: none; }

  // When the input is checked (by clicking the label), I wan't the animation to run and the colour to change.
  input:checked + label:after {
    @include animation(check 0.8s);
    border-color: $tylr-secondary-color;
  }
}
